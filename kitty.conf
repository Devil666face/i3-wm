# font_family      JetBrainsMono Nerd Font
font_family      CaskaydiaCove Nerd Font
italic_font      auto
bold_font        auto
bold_italic_font auto

# Font size (in pts)
font_size        17.0
modify_font cell_width 95%

# The cursor shape can be one of (block, beam, underline)
shell_integration no-cursor
cursor_shape beam

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking.
cursor_blink_interval     0

# Stop blinking cursor after the specified number of seconds of keyboard inactivity. Set to
# zero or a negative number to never stop blinking.
cursor_stop_blinking_after 15.0

# Number of lines of history to keep in memory for scrolling back
scrollback_lines 2000

# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
scrollback_pager less +G -R

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel)
wheel_scroll_multiplier 5.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

# Characters considered part of a word when double clicking. In addition to these characters
# any character that is marked as an alpha-numeric character in the unicode
# database will be matched.
select_by_word_characters :@-./_~?&=%+#

# Hide mouse cursor after the specified number of seconds of the mouse not being used. Set to
# zero or a negative number to disable mouse cursor hiding.
mouse_hide_wait 0.0

# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# For a list of available layouts, see the file layouts.py
enabled_layouts *

# If enabled, the window size will be remembered so that new instances of kitty will have the same
# size as the previous instance. If disabled, the window will initially have size configured
# by initial_window_width/height, in pixels.
remember_window_size   no
initial_window_width   640
initial_window_height  400

# Delay (in milliseconds) between screen updates. Decreasing it, increases fps
# at the cost of more CPU usage. The default value yields ~100fps which is more
# that sufficient for most uses.
# repaint_delay    10
repaint_delay    10

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that
# redraw the entire screen on each loop, because kitty is so fast that partial
# screen updates will be drawn.
input_delay 0

# Visual bell duration. Flash the screen when a bell occurs for the specified number of
# seconds. Set to zero to disable.
visual_bell_duration 0.0

# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell yes

# The modifier keys to press when clicking with the mouse on URLs to open the URL
open_url_modifiers ctrl+alt

# The program with which to open URLs that are clicked on. The special value "default" means to
# use the operating system's default URL handler.
open_url_with default

# The value of the TERM environment variable to set
term xterm-256color

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
# window_border_width 0
# window_margin_width 0

# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.

# Delete all shortcuts
# clear_all_shortcuts yes
# Clipboard
map ctrl+shift+v      paste_from_clipboard
map ctrl+shift+c      copy_to_clipboard
map ctrl+shift+м      paste_from_clipboard
map ctrl+shift+с      copy_to_clipboard

# Scrolling
map ctrl+alt+up        scroll_line_up
map ctrl+alt+down      scroll_line_down
map ctrl+alt+k         scroll_line_up
map ctrl+alt+j         scroll_line_down
map ctrl+alt+л         scroll_line_up
map ctrl+alt+о         scroll_line_down
map ctrl+alt+page_up   scroll_page_up
map ctrl+alt+page_down scroll_page_down
map ctrl+alt+home      scroll_home
map ctrl+alt+end       scroll_end
map ctrl+alt+h         show_scrollback
map ctrl+alt+р         show_scrollback

# Window management
map ctrl+alt+w        close_window
map ctrl+alt+ц        close_window
map ctrl+alt+enter    new_window
map ctrl+alt+right    next_window
map ctrl+alt+left     previous_window
map ctrl+alt+p        move_window_forward
map ctrl+alt+n        move_window_backward
map ctrl+alt+`        move_window_to_top
map ctrl+alt+l        next_layout
map ctrl+alt+з        move_window_forward
map ctrl+alt+т        move_window_backward
map ctrl+alt+ё        move_window_to_top
map ctrl+alt+д        next_layout

map ctrl+alt+1        first_window
map ctrl+alt+2        second_window
map ctrl+alt+3        third_window
map ctrl+alt+4        fourth_window
map ctrl+alt+5        fifth_window
map ctrl+alt+6        sixth_window
map ctrl+alt+7        seventh_window
map ctrl+alt+8        eighth_window
map ctrl+alt+9        ninth_window

# Tab management
# map ctrl+alt+right    next_tab
# map ctrl+alt+left     previous_tab
map ctrl+alt+t        new_tab
map ctrl+alt+е        new_tab
map ctrl+shift+right        move_tab_forward
map ctrl+shift+left        move_tab_backward
map alt+1        goto_tab 1
map alt+2        goto_tab 2
map alt+3        goto_tab 3
map alt+4        goto_tab 4
map alt+5        goto_tab 5
map alt+6        goto_tab 6
map alt+7        goto_tab 7
map alt+8        goto_tab 8
map alt+9        goto_tab 9



# Miscellaneous
map ctrl+alt+]      increase_font_size
map ctrl+alt+[    decrease_font_size
map ctrl+alt+backspace restore_font_size

# Symbol mapping (special font for specified unicode code points). Map the
# specified unicode codepoints to a particular font. Useful if you need special
# rendering for some symbols, such as for Powerline. Avoids the need for
# patched fonts. Each unicode code point is specified in the form U+<code point
# in hexadecimal>. You can specify multiple code points, separated by commas
# and ranges separated by hyphens. symbol_map itself can be specified multiple times.
# Syntax is:
#
# symbol_map codepoints Font Family Name
#
# For example:
#
#symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols
hide_window_decorations titlebar-only
macos_option_as_alt no

# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the default background color and finally you can use an arbitrary color, such
# as #12af59 or "red".
macos_titlebar_color background

allow_remote_control yes

cursor                  #928374
cursor_text_color       background

url_color               #83a598

visual_bell_color       #8ec07c
bell_border_color       #8ec07c

active_border_color     #d79921
inactive_border_color   #665c54

foreground              #ebdbb2
background              #282828
selection_foreground    #928374
selection_background    #ebdbb2

active_tab_foreground   #d79921
active_tab_background   #282828
inactive_tab_foreground #a89984
inactive_tab_background #282828
# active_tab_background   #665c54
# inactive_tab_background #3c3836


# black  (bg3/bg4)
color0                  #665c54
color8                  #7c6f64

# red
color1                  #cc241d
color9                  #fb4934

#: green
color2                  #98971a
color10                 #b8bb26

# yellow
color3                  #d79921
color11                 #fabd2f

# blue
color4                  #458588
color12                 #83a598

# purple
color5                  #b16286
color13                 #d3869b

# aqua
color6                  #689d6a
color14                 #8ec07c

# white (fg4/fg3)
color7                  #a89984
color15                 #bdae93

# sync_to_monitor yes
input_delay 0
# draw_minimal_borders yes

# tab_bar_style powerline
tab_bar_align center
confirm_os_window_close 0
enable_audio_bell no
